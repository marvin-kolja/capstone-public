"""initial

Revision ID: 8b4227f1d910
Revises:
Create Date: 2025-01-19 22:09:46.442677

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import api.custom_db_types


# revision identifiers, used by Alembic.
revision: str = "8b4227f1d910"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "device",
        sa.Column("device_class", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("device_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("build_version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "product_version", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("product_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("udid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("udid"),
    )
    op.create_table(
        "xc_project",
        sa.Column("path", api.custom_db_types.PathType(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "build",
        sa.Column("scheme", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("configuration", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("test_plan", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("device_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(["device_id"], ["device.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "project_id",
            "device_id",
            "scheme",
            "configuration",
            "test_plan",
            name="unique_build",
        ),
    )
    op.create_table(
        "session_testplan",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "xc_test_plan_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("end_on_failure", sa.Boolean(), nullable=True),
        sa.Column("repetitions", sa.Integer(), nullable=False),
        sa.Column("repetition_strategy", sa.String(), nullable=False),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("recording_strategy", sa.String(), nullable=True),
        sa.Column("recording_start_strategy", sa.String(), nullable=True),
        sa.Column("reinstall_app", sa.Boolean(), nullable=True),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "xc_project_configuration",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "xc_project_scheme",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "xc_project_target",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "session_testplan_step",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("repetitions", sa.Integer(), nullable=True),
        sa.Column("test_cases", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("recording_start_strategy", sa.String(), nullable=True),
        sa.Column("reinstall_app", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("test_plan_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_plan_id"], ["session_testplan.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("test_plan_id", "order"),
    )
    op.create_table(
        "xc_project_test_plan",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("scheme_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["xc_project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["scheme_id"], ["xc_project_scheme.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "xctestrun",
        sa.Column("path", api.custom_db_types.PathType(), nullable=True),
        sa.Column("test_configurations", sa.JSON(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("build_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["build_id"], ["build.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("build_id"),
        sa.UniqueConstraint("path"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("xctestrun")
    op.drop_table("xc_project_test_plan")
    op.drop_table("session_testplan_step")
    op.drop_table("xc_project_target")
    op.drop_table("xc_project_scheme")
    op.drop_table("xc_project_configuration")
    op.drop_table("session_testplan")
    op.drop_table("build")
    op.drop_table("xc_project")
    op.drop_table("device")
    # ### end Alembic commands ###
