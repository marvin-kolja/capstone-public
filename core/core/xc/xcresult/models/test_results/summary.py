# generated by datamodel-codegen:
#   filename:  core/scripts/xcresult_model_generator/schemas/test_results/summary.json
#   timestamp: 2025-01-20T11:34:59+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class InsightSummary(BaseModel):
    impact: str
    category: str
    text: str


class TestResult(Enum):
    passed = 'Passed'
    failed = 'Failed'
    skipped = 'Skipped'
    expected_failure = 'Expected Failure'
    unknown = 'unknown'


class Statistic(BaseModel):
    title: str
    subtitle: str


class Device(BaseModel):
    device_id: Optional[str] = Field(None, alias='deviceId')
    device_name: str = Field(..., alias='deviceName')
    architecture: str
    model_name: str = Field(..., alias='modelName')
    platform: Optional[str] = None
    os_version: str = Field(..., alias='osVersion')


class Configuration(BaseModel):
    configuration_id: str = Field(..., alias='configurationId')
    configuration_name: str = Field(..., alias='configurationName')


class TestFailure(BaseModel):
    test_name: str = Field(..., alias='testName')
    target_name: str = Field(..., alias='targetName')
    failure_text: str = Field(..., alias='failureText')
    test_identifier: int = Field(..., alias='testIdentifier')


class DeviceAndConfigurationSummary(BaseModel):
    device: Device
    test_plan_configuration: Configuration = Field(..., alias='testPlanConfiguration')
    passed_tests: int = Field(..., alias='passedTests')
    failed_tests: int = Field(..., alias='failedTests')
    skipped_tests: int = Field(..., alias='skippedTests')
    expected_failures: int = Field(..., alias='expectedFailures')


class Summary(BaseModel):
    title: str
    start_time: Optional[float] = Field(
        None,
        alias='startTime',
        description='Date as a UNIX timestamp (seconds since midnight UTC on January 1, 1970)',
    )
    finish_time: Optional[float] = Field(
        None,
        alias='finishTime',
        description='Date as a UNIX timestamp (seconds since midnight UTC on January 1, 1970)',
    )
    environment_description: str = Field(
        ...,
        alias='environmentDescription',
        description='Description of the Test Plan, OS, and environment that was used during testing',
    )
    top_insights: List[InsightSummary] = Field(..., alias='topInsights')
    result: TestResult
    total_test_count: int = Field(..., alias='totalTestCount')
    passed_tests: int = Field(..., alias='passedTests')
    failed_tests: int = Field(..., alias='failedTests')
    skipped_tests: int = Field(..., alias='skippedTests')
    expected_failures: int = Field(..., alias='expectedFailures')
    statistics: List[Statistic]
    devices_and_configurations: List[DeviceAndConfigurationSummary] = Field(
        ..., alias='devicesAndConfigurations'
    )
    test_failures: List[TestFailure] = Field(..., alias='testFailures')
