# generated by datamodel-codegen:
#   filename:  core/scripts/xcresult_model_generator/schemas/test_results/tests.json
#   timestamp: 2025-01-10T13:59:29+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class Configuration(BaseModel):
    configurationId: str
    configurationName: str


class Device(BaseModel):
    deviceId: Optional[str] = None
    deviceName: str
    architecture: str
    modelName: str
    platform: Optional[str] = None
    osVersion: str


class TestResult(Enum):
    Passed = 'Passed'
    Failed = 'Failed'
    Skipped = 'Skipped'
    Expected_Failure = 'Expected Failure'
    unknown = 'unknown'


class TestNodeType(Enum):
    Test_Plan = 'Test Plan'
    Unit_test_bundle = 'Unit test bundle'
    UI_test_bundle = 'UI test bundle'
    Test_Suite = 'Test Suite'
    Test_Case = 'Test Case'
    Device = 'Device'
    Test_Plan_Configuration = 'Test Plan Configuration'
    Arguments = 'Arguments'
    Repetition = 'Repetition'
    Test_Case_Run = 'Test Case Run'
    Failure_Message = 'Failure Message'
    Source_Code_Reference = 'Source Code Reference'
    Attachment = 'Attachment'
    Expression = 'Expression'
    Test_Value = 'Test Value'


class TestNode(BaseModel):
    nodeIdentifier: Optional[str] = None
    nodeType: TestNodeType
    name: str
    details: Optional[str] = None
    duration: Optional[str] = None
    result: Optional[TestResult] = None
    tags: Optional[List[str]] = None
    children: Optional[List[TestNode]] = None


class Tests(BaseModel):
    testPlanConfigurations: List[Configuration]
    devices: List[Device]
    testNodes: List[TestNode]


TestNode.model_rebuild()
